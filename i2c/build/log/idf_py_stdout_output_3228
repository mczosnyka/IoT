[1/11] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D C:\Projekty\IoT\i2c\build\bootloader\esp-idf\esptool_py && C:\Espressif\python_env\idf5.3_py3.11_env\Scripts\python.exe C:/Espressif/frameworks/esp-idf-v5.3.1/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 C:/Projekty/IoT/i2c/build/bootloader/bootloader.bin"
Bootloader binary size 0x6880 bytes. 0x780 bytes (7%) free.
[2/9] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/ssd1306.c.obj
C:/Projekty/IoT/i2c/main/ssd1306.c: In function 'ssd1306_init':
C:/Projekty/IoT/i2c/main/ssd1306.c:83:19: warning: variable 'res' set but not used [-Wunused-but-set-variable]
   83 |         esp_err_t res;
      |                   ^~~
C:/Projekty/IoT/i2c/main/ssd1306.c: In function 'ssd1306_contrast':
C:/Projekty/IoT/i2c/main/ssd1306.c:111:19: warning: unused variable 'res' [-Wunused-variable]
  111 |         esp_err_t res = i2c_master_transmit(dev->_i2c_dev_handle, out_buf, 3, I2C_TICKS_TO_WAIT);
      |                   ^~~
C:/Projekty/IoT/i2c/main/ssd1306.c: In function 'ssd1306_yoffset':
C:/Projekty/IoT/i2c/main/ssd1306.c:126:19: warning: unused variable 'res' [-Wunused-variable]
  126 |         esp_err_t res = i2c_master_transmit(dev->_i2c_dev_handle, out_buf, 3, I2C_TICKS_TO_WAIT);
      |                   ^~~
C:/Projekty/IoT/i2c/main/ssd1306.c: In function 'i2c_display_image':
C:/Projekty/IoT/i2c/main/ssd1306.c:166:19: warning: variable 'res' set but not used [-Wunused-but-set-variable]
  166 |         esp_err_t res;
      |                   ^~~
[3/9] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/user_input.c.obj
[4/9] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/main.c.obj
In file included from C:/Projekty/IoT/i2c/main/ssd1306.h:2,
                 from C:/Projekty/IoT/i2c/main/main.c:1:
C:/Projekty/IoT/i2c/main/font8x8_basic.h:5:16: warning: 'font8x8_basic_tr' defined but not used [-Wunused-variable]
    5 | static uint8_t font8x8_basic_tr[128][8] = {
      |                ^~~~~~~~~~~~~~~~
[5/9] Linking C static library esp-idf\main\libmain.a
[6/9] Generating ld/sections.ld
[7/9] Linking CXX executable i2c.elf
[8/9] Generating binary image from built executable
esptool.py v4.8.1
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated C:/Projekty/IoT/i2c/build/i2c.bin
[9/9] cmd.exe /C "cd /D C:\Projekty\IoT\i2c\build\esp-idf\esptool_py && C:\Espressif\python_env\idf5.3_py3.11_env\Scripts\python.exe C:/Espressif/frameworks/esp-idf-v5.3.1/components/partition_table/check_sizes.py --offset 0x8000 partition --type app C:/Projekty/IoT/i2c/build/partition_table/partition-table.bin C:/Projekty/IoT/i2c/build/i2c.bin"
i2c.bin binary size 0x40430 bytes. Smallest app partition is 0x100000 bytes. 0xbfbd0 bytes (75%) free.
